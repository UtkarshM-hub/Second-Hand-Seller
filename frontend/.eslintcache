[{"/home/upendra/Desktop/Second_hand_sell/frontend/src/index.js":"1","/home/upendra/Desktop/Second_hand_sell/frontend/src/reducers/userReducer.js":"2","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Header.js":"3","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/LoginScreen.js":"4","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Product.js":"5","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/FormContainer.js":"6","/home/upendra/Desktop/Second_hand_sell/frontend/src/actions/productActions.js":"7","/home/upendra/Desktop/Second_hand_sell/frontend/src/types/userConstants.js":"8","/home/upendra/Desktop/Second_hand_sell/frontend/src/store.js":"9","/home/upendra/Desktop/Second_hand_sell/frontend/src/actions/userActions.js":"10","/home/upendra/Desktop/Second_hand_sell/frontend/src/App.js":"11","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/Landing.js":"12","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/RegisterScreen.js":"13","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductScreen.js":"14","/home/upendra/Desktop/Second_hand_sell/frontend/src/types/productConstants.js":"15","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Loader.js":"16","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Message.js":"17","/home/upendra/Desktop/Second_hand_sell/frontend/src/reducers/productReducers.js":"18","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Footer.js":"19","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/UserListScreen.js":"20","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductListScreen.js":"21","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductEditScreen.js":"22","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductCreateScreen.js":"23","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/SearchBox.js":"24","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Paginate.js":"25","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Meta.js":"26","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/UserUpdateScreen.js":"27","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/AboutUsScreen.js":"28","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/NotFoundScreen.js":"29","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/EmailVerificationScreen.js":"30"},{"size":287,"mtime":1606714185360,"results":"31","hashOfConfig":"32"},{"size":4542,"mtime":1607766534540,"results":"33","hashOfConfig":"32"},{"size":2678,"mtime":1607784776372,"results":"34","hashOfConfig":"32"},{"size":2604,"mtime":1606801731456,"results":"35","hashOfConfig":"32"},{"size":690,"mtime":1607580208912,"results":"36","hashOfConfig":"32"},{"size":336,"mtime":1606799252034,"results":"37","hashOfConfig":"32"},{"size":5523,"mtime":1607329829632,"results":"38","hashOfConfig":"32"},{"size":1758,"mtime":1607759993887,"results":"39","hashOfConfig":"32"},{"size":1594,"mtime":1607760088931,"results":"40","hashOfConfig":"32"},{"size":7082,"mtime":1607766580208,"results":"41","hashOfConfig":"32"},{"size":2905,"mtime":1607763631372,"results":"42","hashOfConfig":"32"},{"size":2314,"mtime":1607361174620,"results":"43","hashOfConfig":"32"},{"size":5248,"mtime":1607784499568,"results":"44","hashOfConfig":"32"},{"size":13388,"mtime":1607692945900,"results":"45","hashOfConfig":"32"},{"size":1336,"mtime":1607359426616,"results":"46","hashOfConfig":"32"},{"size":515,"mtime":1606730125388,"results":"47","hashOfConfig":"32"},{"size":235,"mtime":1606963756643,"results":"48","hashOfConfig":"32"},{"size":3658,"mtime":1607312121388,"results":"49","hashOfConfig":"32"},{"size":345,"mtime":1607784712608,"results":"50","hashOfConfig":"32"},{"size":3031,"mtime":1607412017980,"results":"51","hashOfConfig":"32"},{"size":3213,"mtime":1607412108352,"results":"52","hashOfConfig":"32"},{"size":7547,"mtime":1607749238834,"results":"53","hashOfConfig":"32"},{"size":6600,"mtime":1607749238834,"results":"54","hashOfConfig":"32"},{"size":750,"mtime":1607328282468,"results":"55","hashOfConfig":"32"},{"size":771,"mtime":1607314815940,"results":"56","hashOfConfig":"32"},{"size":542,"mtime":1607361230792,"results":"57","hashOfConfig":"32"},{"size":8745,"mtime":1607691196460,"results":"58","hashOfConfig":"32"},{"size":1994,"mtime":1607401621832,"results":"59","hashOfConfig":"32"},{"size":648,"mtime":1607409693968,"results":"60","hashOfConfig":"32"},{"size":1109,"mtime":1607782381908,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"14678mp",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"83"},"/home/upendra/Desktop/Second_hand_sell/frontend/src/index.js",[],["135","136"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/reducers/userReducer.js",[],["137","138"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Header.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/LoginScreen.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Product.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/FormContainer.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/actions/productActions.js",[],["139","140"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/types/userConstants.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/store.js",[],["141","142"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/actions/userActions.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/App.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/Landing.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/RegisterScreen.js",["143"],"import React, { useState, useEffect } from 'react'\nimport { Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { verify } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n\n  const [email, setEmail] = useState('')\n  const [address, setAddress] = useState('')\n  const [contact, setContact] = useState('')\n\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n  const dispatch = useDispatch()\n  const userVerification = useSelector((state) => state.userVerification)\n  const { verification, loading, error } = userVerification\n  const userRegister = useSelector((state) => state.userRegister)\n  const {\n    userData,\n    loading: loadingRegister,\n    error: errorRegister,\n  } = userRegister\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n  useEffect(() => {\n    if (userData) {\n      history.push(redirect)\n    }\n  }, [history, redirect, userData])\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n    } else {\n      dispatch(verify(name, email, password, contact, address))\n    }\n  }\n  return (\n    <FormContainer>\n      <h1>SIGN UP</h1>\n      <Form onSubmit={submitHandler} className='mt-5'>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter Name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='email'>\n          <Form.Label>\n            Email Address{' '}\n            <small className='slanted'>\n              {' '}\n              *Be sure to enter your valid email address\n            </small>\n          </Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter Email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='address'>\n          <Form.Label> Address</Form.Label>\n          <Form.Control\n            type='address'\n            placeholder='Enter Address'\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='contact No'>\n          <Form.Label>\n            Mobile No{' '}\n            <small className='slanted'>\n              * Be sure to enter a correct 10 digit number starting with 9\n            </small>\n          </Form.Label>\n          <Form.Control\n            type='contact'\n            placeholder='Enter Mobile No'\n            value={contact}\n            onChange={(e) => setContact(e.target.value)}\n            required\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password </Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='confirmpassword'>\n          <Form.Label>Confirm Password </Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm Password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>{' '}\n      <Row className='py-3'>\n        {/* {!loading && ()} */}\n        <Col>\n          Already Have an Account?\n          <Link\n            className='underlined1 '\n            to={redirect ? `/login?redirect=${redirect}` : '/login'}\n          >\n            <span className='btn-primary mb-3 '> Login</span>\n          </Link>\n        </Col>\n      </Row>\n      {loading && (\n        <Spinner\n          animation='border'\n          role='status'\n          variant='danger'\n          style={{\n            width: '100px',\n            margin: 'auto',\n            height: '100px',\n            margin: 'auto',\n            display: 'block',\n          }}\n        />\n      )}\n      {verification && (\n        <Message variant='success'>{verification.response}</Message>\n      )}\n      {error && <Message variant='danger'>{error}</Message>}\n      {message && <Message variant='danger'>{message}</Message>}\n      {errorRegister && <Message variant='danger'>{errorRegister}</Message>}\n      {loadingRegister && <Loader />}\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductScreen.js",["144"],"import React, { useState, useEffect } from 'react'\nimport Meta from '../components/Meta'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Carousel from 'react-bootstrap/Carousel'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { sendEmail } from '../actions/userActions'\nimport { PRODUCT_REVIEW_RESET } from '../types/productConstants'\nconst ProductScreen = ({ match, history }) => {\n  const [text, setText] = useState('')\n  const [comment, setComment] = useState('')\n\n  const [sendMail, setSendMail] = useState(false)\n  const [emailSent, setEmailSent] = useState(false)\n\n  const dispatch = useDispatch()\n  const emailReducer = useSelector((state) => state.emailReducer)\n  const {\n    loading: loadingEmail,\n    error: errorEmail,\n    data: dataEmail,\n  } = emailReducer\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    loading: loadingReview,\n    error: errorReview,\n    success: successReview,\n  } = productReviewCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userData } = userLogin\n  useEffect(() => {\n    if (successReview) {\n      setComment('')\n      dispatch({\n        type: PRODUCT_REVIEW_RESET,\n      })\n    }\n    dispatch(listProductDetails(match.params.id))\n  }, [match.params.id, dispatch, successReview])\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createProductReview(match.params.id, comment))\n  }\n  const emailSubmit = (e) => {\n    e.preventDefault()\n    setEmailSent(true)\n\n    dispatch(\n      sendEmail(\n        product?.seller?.selleremail,\n        text,\n        userData?.name,\n        userData?.address,\n        product?.name,\n        userData?.email,\n        userData?.contact?.phone_no\n      )\n    )\n\n    setText('')\n\n    setSendMail(false)\n    setTimeout(() => {\n      setEmailSent(false)\n    }, 10000)\n  }\n  const sendEMAIL = () => {\n    setSendMail(true)\n  }\n  const cancelHandler = () => {\n    setSendMail(false)\n  }\n  return (\n    <>\n      <Link to='/' className='btn btn-success my-3'>\n        Go Back\n      </Link>\n      <br />\n      {userData && userData._id === product.user && (\n        <Link\n          to={`/admin/product/${match.params.id}/edit`}\n          className='btn btn-primary my-3'\n        >\n          Edit Product\n        </Link>\n      )}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row className='row mb-2'>\n            <Col md={6} className='image-area'>\n              <Carousel>\n                {product.images.map((image) => (\n                  <Carousel.Item key={image._id}>\n                    <Image\n                      className='d-block w-100'\n                      src={image?.image1}\n                      alt='First slide'\n                    />\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Col>\n\n            <Col className='borderaround setheight' md={6}>\n              <p className='details'>\n                <i className='fas fa-info'></i> General Details\n              </p>\n\n              <Row>\n                <Col className='product' md={4} sm={4} xs={4}>\n                  <ul>\n                    <li> Product Id:</li>\n                    <li> Product:</li>\n                    <li> Posted On:</li>\n                    <li> Expires On:</li>\n                    <li></li>\n                  </ul>\n                </Col>\n                <Col md={8} sm={8} xs={8}>\n                  <ul>\n                    <li>{product._id}</li>\n                    <li> {product.name}</li>\n                    <li>{product?.createdAt?.substring(0, 10)}</li>\n                    <li>{product?.expiresOn?.substring(0, 10)}</li>\n                    <li></li>\n                  </ul>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          {loadingEmail && <Loader />}\n          {errorEmail && <Message variant='danger'>{errorEmail}</Message>}\n          {/* {console.log(dataEmail?.response)} */}\n          {dataEmail && emailSent && (\n            <Message variant='success'>{dataEmail.response}</Message>\n          )}\n          {sendMail && userData && (\n            <Row id='email' className='mt-5'>\n              <Col md={10} sm={12} className='formAround'>\n                <Form onSubmit={emailSubmit}>\n                  <div className='text-area1'>\n                    <span className='text-area2'>Send Email</span>\n\n                    <p className='text-area3'>\n                      Get in touch with {product?.seller?.sellername}\n                    </p>\n                  </div>\n                  <Row>\n                    <Col md={4} sm={4} xs={4}>\n                      <ul className='marginshift'>\n                        <p>{''}</p>\n                        <br />\n                        <li className='mt-2'>Your Name:</li>\n                        <li>Your Email:</li>\n                        <li>Your Phone No:</li>\n                        <li>Your Message:</li>\n                      </ul>\n                    </Col>\n                    <Col md={8} sm={8} xs={8}>\n                      <p className='cross'>\n                        <button\n                          onClick={cancelHandler}\n                          className=' cancel m-auto '\n                        >\n                          {' '}\n                          <i className='far fa-window-close'></i>\n                        </button>\n                      </p>\n                      <li>{userData.name}</li>\n                      <li>{userData.email}</li>\n                      <li>{userData?.contact?.phone_no}</li>\n                      <li>\n                        <textarea\n                          style={{ maxWidth: '100%', borderRadius: '5px' }}\n                          id='w3review'\n                          name='text'\n                          value={text}\n                          onChange={(e) => setText(e.target.value)}\n                          rows='8'\n                          cols='55'\n                          required\n                        />\n                      </li>\n                    </Col>\n                    <button className='button ' type='submit'>\n                      Send Email\n                    </button>\n                  </Row>\n                </Form>\n              </Col>\n            </Row>\n          )}\n          <Row>\n            <Col className='borderaround mt-5' md={10}>\n              <p className='details'>\n                <i className='fas fa-info'></i> Seller Details\n              </p>\n\n              <Row className='mb-2'>\n                <Col className='product' md={4} sm={2} xs={2}>\n                  <ul>\n                    <li> Name:</li>\n\n                    <li> Email:</li>\n                    <li> Address:</li>\n                    <li>Phone:</li>\n                    <li></li>\n                  </ul>\n                </Col>\n                <Col md={8} sm={10} xs={10}>\n                  <ul>\n                    <li>{product?.seller?.sellername}</li>\n\n                    <li>\n                      {/* {product?.seller?.selleremail}{' '} */}\n                      <span>\n                        <button\n                          className='emailbutton btn-success'\n                          onClick={sendEMAIL}\n                        >\n                          Send Email\n                        </button>\n                      </span>\n                    </li>\n                    <li>{product?.seller?.selleraddress}</li>\n                    <li>\n                      {product?.seller?.phoneNo?.mobile}{' '}\n                      <span>\n                        {product?.seller?.phoneNo?.isVerified ? (\n                          <span>\n                            <i className='fas fa-mobile-alt'></i>\n                            <span className='underlined'>verified</span>\n                          </span>\n                        ) : (\n                          <span>\n                            <i className='fas fa-mobile-alt'></i>\n                            <span className='underlined'>unverified</span>\n                          </span>\n                        )}{' '}\n                      </span>\n                    </li>\n                    <li></li>\n                  </ul>\n                </Col>\n              </Row>\n              {sendMail && !userData && (\n                <Message variant='danger'>\n                  You need to be logged in to use this feature.{' '}\n                  <span>\n                    <Link to='/login'>Log In</Link> to Continue\n                  </span>\n                </Message>\n              )}\n            </Col>\n          </Row>\n          <Row className='mt-3'>\n            <Col className='borderaround mt-5 ' md={10}>\n              <p className='details'>\n                <i className='fas fa-info'></i> Pricing Details\n              </p>\n              <Row>\n                <Col className='product' md={6} sm={6} xs={4}>\n                  <ul>\n                    <li>Total Price:</li>\n                    {product?.Cost?.negotiable && <li>Negotiable:</li>}\n                  </ul>\n                </Col>\n                <Col md={6} sm={6} xs={8}>\n                  <ul>\n                    <li> Rs {product?.Cost?.price}</li>\n                    {product?.Cost?.negotiable && <li>Yes</li>}\n                  </ul>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col className='borderaround mt-5' md={10} sm={12} xs={12}>\n              <p className='details '>\n                <i className='fas fa-info'></i> Description\n              </p>\n              <p className='detailsdescription'>{product.description}</p>\n            </Col>\n          </Row>\n          <Row>\n            <Col className='borderaround mt-5' md={10}>\n              <p className='details'>\n                <i className='fas fa-info'></i> Delivery Information\n              </p>\n              <Row>\n                <Col className='product' md={6} sm={6} xs={5}>\n                  <ul>\n                    <li>Delivery Area:</li>\n                    <li>Delivery Charge:</li>\n                  </ul>\n                </Col>\n                <Col md={6} sm={6} xs={7}>\n                  <ul>\n                    <li>{product?.shippingAddress?.address} </li>\n                    <li>\n                      {' '}\n                      Rs {''}\n                      {product?.shippingAddress?.shippingCharge}\n                    </li>\n                  </ul>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row className='mt-3'>\n            <Col md={6}>\n              <h4>Buyer's Speak</h4>\n              {product.reviews.length === 0 && (\n                <Message variant='primary'>Be the First One to Review</Message>\n              )}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    {/* <strong>{review.name}</strong>\n                    <p>{review.createdAt.substring(0, 10)}</p> */}\n                    <p>\n                      Q.<span className='comment'> {review.comment} </span>\n                      <span className='review'>\n                        <span style={{ color: '#32a897',fontWeight:'800' }}>\n                          --Posted By <strong>{review.name}</strong> on{' '}\n                          <strong> {review.createdAt.substring(0, 10)} </strong>{' '}\n                        </span>\n                      </span>\n                    </p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item>\n                  <p>Post Your Speak</p>\n                  {errorReview && (\n                    <Message variant='danger'>{errorReview}</Message>\n                  )}\n\n                  {loadingReview && <Loader />}\n                  {userData ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='comment'>\n                        {/* <Form.Label>Comment</Form.Label> */}\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type='submit' variant='primary'>\n                        Post\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant='primary'>\n                      You must <Link to='/login'>Log In</Link> to post your\n                      speak{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/types/productConstants.js",[],["145","146"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Loader.js",["147"],"import React from 'react'\nimport { Spinner } from 'react-bootstrap'\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      variant='danger'\n      style={{\n        width: '100px',\n        margin: 'auto',\n        height: '100px',\n        margin: 'auto',\n        marginTop: '100px',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n//this is also very nice as no image is required locally\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Message.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/reducers/productReducers.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Footer.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/UserListScreen.js",[],["148","149"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductListScreen.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductEditScreen.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductCreateScreen.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/SearchBox.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Paginate.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Meta.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/UserUpdateScreen.js",["150"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProducts, deleteProduct } from '../actions/productActions'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { updateUser, getUserDetails } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nimport { USER_UPDATE_RESET, USER_DETAILS_RESET } from '../types/userConstants'\nconst UserUpdateScreen = ({ history, match }) => {\n  const userId = match.params.id\n  var i = 1\n  const [name, setName] = useState('')\n  const [address, setAddress] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const [phone_no, setPhone_no] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userData } = userLogin\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const { success, loading, error } = userUpdate\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { user, loading: loadingDetails } = userDetails\n  const productList = useSelector((state) => state.productList)\n  const { products, loading: loadinglist } = productList\n  const productDelete = useSelector((state) => state.productDelete)\n\n  const { success: successDelete } = productDelete\n  useEffect(() => {\n    dispatch(listProducts())\n    if (!userData || success) {\n      dispatch({ type: USER_UPDATE_RESET })\n      dispatch({ type: USER_DETAILS_RESET })\n\n      if (userData && userData.isAdmin) {\n        history.push('/admin/userlist')\n      } else {\n        history.push('/')\n      }\n    } else {\n      if (!user?.name) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setAddress(user.address)\n        setPhone_no(user?.contact?.phone_no)\n        setEmail(user.email)\n      }\n    }\n  }, [history, userData, user, success, dispatch, userId, successDelete])\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n    } else {\n      dispatch(\n        updateUser({\n          _id: userId,\n          name,\n          email,\n          password,\n          address,\n\n          phone_no,\n        })\n      )\n    }\n  }\n  return (\n    <>\n      <FormContainer>\n        <h1>Details</h1>\n\n        {loadingDetails && <Loader />}\n        <Form onSubmit={submitHandler} className='mt-5 mb-2'>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>\n              Email Address{' '}\n              <small className='slanted'>\n                {' '}\n                *Be sure to enter your valid email address\n              </small>\n            </Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter Email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='address'>\n            <Form.Label> Address</Form.Label>\n            <Form.Control\n              type='address'\n              placeholder='Enter Address'\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='contact No'>\n            <Form.Label>\n              Mobile No{' '}\n              <small className='slanted'>\n                * Be sure to enter a correct 10 digit number starting with 9\n              </small>\n            </Form.Label>\n            <Form.Control\n              type='contact'\n              placeholder='Enter Mobile No'\n              value={phone_no}\n              onChange={(e) => setPhone_no(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password </Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='confirmpassword'>\n            <Form.Label>Confirm Password </Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm Password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          {loading && <Loader />}\n\n          <Button type='submit' variant='primary'>\n            Update Profile\n          </Button>\n        </Form>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && (\n          <Message variant='success'>Profile updated successfully</Message>\n        )}\n      </FormContainer>\n      <Row>\n        <Col md={2}></Col>\n        <Col md={8}>\n          {loadinglist ? (\n            <Loader />\n          ) : (\n            <>\n              <h3>My Uploads</h3>\n              <Table\n                striped\n                bordered\n                hover\n                responsive\n                className='table-sm'\n                variant='danger'\n              >\n                <thead>\n                  <tr>\n                    <th>SN</th>\n                    <th>ID</th>\n                    <th>Product Name</th>\n                    <th>Category</th>\n                    <th>Price</th>\n                    <th>Negotiable</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* {console.log(products)}\n                  {console.log(products.length)} */}\n                  {userData &&\n                    products &&\n                    products.length !== 0 &&\n                    products.map(\n                      (product) =>\n                        product &&\n                        product.user == userData._id && (\n                          <tr key={product._id}>\n                            <td>{i++}</td>\n                            <td>{product._id}</td>\n                            <td>{product.name}</td>\n\n                            <td>{product.category}</td>\n                            <td>{product?.Cost.price}</td>\n                            <td>\n                              {product?.Cost.negotiable ? (\n                                <i\n                                  className='fas fa-check'\n                                  style={{ color: 'green' }}\n                                ></i>\n                              ) : (\n                                <i\n                                  className='fas fa-times'\n                                  style={{ color: 'red' }}\n                                ></i>\n                              )}\n                            </td>\n                            <td>\n                              <LinkContainer\n                                to={`/admin/product/${product._id}/edit`}\n                              >\n                                <Button variant='light' className='btn-sm'>\n                                  <i className='fas fa-edit'></i>\n                                </Button>\n                              </LinkContainer>\n                              <Button\n                                variant='danger'\n                                className='btn-sm'\n                                onClick={() => deleteHandler(product._id)}\n                              >\n                                <i className='fas fa-trash'></i>\n                              </Button>\n                            </td>\n                          </tr>\n                        )\n                    )}\n                </tbody>\n              </Table>\n            </>\n          )}\n        </Col>\n        <Col md={2}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default UserUpdateScreen\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/AboutUsScreen.js",["151","152","153"],"import React from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\n\nconst AboutUsScreen = () => {\n  return (\n    <div className='aboutbody'>\n      <Row>\n        <Col md={3}></Col>\n        <Col md={6} className='aboutpage'>\n          <h1>Who are We?</h1>\n          <p>\n            Actually We are not any professionals. This website has been created\n            for the purpose of aiding students for buying and selling the notes\n            and other items that they no longer need which might be useful for\n            other new students. We take no charge for this. What we do is just\n            aid in establishing the communication between buyer and seller.These\n            can include: notes, drawing instruments, utensils & furnitures\n            specially by students who are on the verge of leaving campus sooner\n            or later.\n          </p>\n        </Col>\n        <Col md={3}></Col>\n      </Row>\n      <Row>\n        <Col md={3}></Col>\n        <Col md={6} className='aboutpage1'>\n          <h1>Developer</h1>\n          <p>\n            Designed and developed by{' '}\n            <a href='https://upendradhamala.com.np' target='_blank'>\n              Upendra Dhamala\n            </a>{' '}\n          </p>\n          <h3>Who am I?</h3>\n          <p>\n            I am Upendra Dhamala. I am a native resident of Achham, Nepal. I am\n            currently studying Computer Engineering(final year) at IOE, WRC\n            Pokhara. There might be some bugs in this website as I am not any\n            professional and currently a web developer in making.\n          </p>\n          <h3>Contact Details</h3>\n          <i className='fas fa-phone'></i> 9864421289\n          <br />\n          <i className='fas fa-envelope-square'></i>{' '}\n          <a target='_blank' href={`mailto:dhamalaupendra@gmail.com`}>\n            dhamalaupendra@gmail.com\n          </a>\n          <br />\n        </Col>\n        <Col md={3}></Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default AboutUsScreen\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/NotFoundScreen.js",["154","155","156"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\n\nconst NotFoundScreen = () => {\n  return (\n    <>\n      <Row>\n        <img src='https://i.imgur.com/lKJiT77.png' />\n      </Row>\n      <Row>\n        <Col md={3}></Col>\n\n        <Col md={6}>\n          <h1 style={{ textAlign: 'Center' }}>\n           This Hungry Dog Ate This Page\n          </h1>\n        </Col>\n        <Col md={3}></Col>\n      </Row>\n      <Row className='docenter'>\n        <Link to='/' className='btn btn-success '>\n          GO BACK\n        </Link>\n      </Row>\n    </>\n  )\n}\n\nexport default NotFoundScreen\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/EmailVerificationScreen.js",["157","158","159","160"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { register } from '../actions/userActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nconst EmailVerificationScreen = ({ location, match, history }) => {\n  const token = match.params.token\n  const dispatch = useDispatch()\n  const userRegister = useSelector((state) => state.userRegister)\n  const { userData, loading, error } = userRegister\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userData) {\n      history.push(redirect)\n    }\n    dispatch(register(token))\n  }, [history, userData, redirect, token])\n\n  return (\n    <Row>\n      <Col md={2}></Col>\n      <Col md={6}>\n        <Message variant='primary'>Waiting for the confirmation....</Message>\n        {loading && <Loader />}\n        {error && <Message variant='danger'>{error}</Message>}\n      </Col>\n      <Col md={2}></Col>\n    </Row>\n  )\n}\n\nexport default EmailVerificationScreen\n",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"161","replacedBy":"165"},{"ruleId":"163","replacedBy":"166"},{"ruleId":"161","replacedBy":"167"},{"ruleId":"163","replacedBy":"168"},{"ruleId":"161","replacedBy":"169"},{"ruleId":"163","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":149,"column":13,"nodeType":"173","messageId":"174","endLine":149,"endColumn":19},{"ruleId":"175","severity":1,"message":"176","line":3,"column":38,"nodeType":"177","messageId":"178","endLine":3,"endColumn":42},{"ruleId":"161","replacedBy":"179"},{"ruleId":"163","replacedBy":"180"},{"ruleId":"171","severity":1,"message":"172","line":13,"column":9,"nodeType":"173","messageId":"174","endLine":13,"endColumn":15},{"ruleId":"161","replacedBy":"181"},{"ruleId":"163","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":206,"column":38,"nodeType":"185","messageId":"174","endLine":206,"endColumn":40},{"ruleId":"175","severity":1,"message":"186","line":2,"column":20,"nodeType":"177","messageId":"178","endLine":2,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":30,"column":53,"nodeType":"189","endLine":30,"endColumn":68},{"ruleId":"187","severity":1,"message":"188","line":45,"column":14,"nodeType":"189","endLine":45,"endColumn":29},{"ruleId":"175","severity":1,"message":"186","line":3,"column":20,"nodeType":"177","messageId":"178","endLine":3,"endColumn":26},{"ruleId":"175","severity":1,"message":"190","line":3,"column":28,"nodeType":"177","messageId":"178","endLine":3,"endColumn":32},{"ruleId":"191","severity":1,"message":"192","line":9,"column":9,"nodeType":"193","endLine":9,"endColumn":54},{"ruleId":"175","severity":1,"message":"194","line":1,"column":28,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"186","line":3,"column":20,"nodeType":"177","messageId":"178","endLine":3,"endColumn":26},{"ruleId":"175","severity":1,"message":"190","line":3,"column":28,"nodeType":"177","messageId":"178","endLine":3,"endColumn":32},{"ruleId":"195","severity":1,"message":"196","line":19,"column":6,"nodeType":"197","endLine":19,"endColumn":42,"suggestions":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],["199"],["200"],["199"],["200"],["199"],["200"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar",["199"],["200"],["199"],["200"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},"Update the dependencies array to be: [history, userData, redirect, token, dispatch]",{"range":"204","text":"205"},[737,773],"[history, userData, redirect, token, dispatch]"]