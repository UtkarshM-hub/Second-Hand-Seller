[{"/home/upendra/Desktop/Second_hand_sell/frontend/src/index.js":"1","/home/upendra/Desktop/Second_hand_sell/frontend/src/reducers/userReducer.js":"2","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Header.js":"3","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/LoginScreen.js":"4","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Product.js":"5","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/FormContainer.js":"6","/home/upendra/Desktop/Second_hand_sell/frontend/src/actions/productActions.js":"7","/home/upendra/Desktop/Second_hand_sell/frontend/src/types/userConstants.js":"8","/home/upendra/Desktop/Second_hand_sell/frontend/src/store.js":"9","/home/upendra/Desktop/Second_hand_sell/frontend/src/actions/userActions.js":"10","/home/upendra/Desktop/Second_hand_sell/frontend/src/App.js":"11","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/Landing.js":"12","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/RegisterScreen.js":"13","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductScreen.js":"14","/home/upendra/Desktop/Second_hand_sell/frontend/src/types/productConstants.js":"15","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Loader.js":"16","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Message.js":"17","/home/upendra/Desktop/Second_hand_sell/frontend/src/reducers/productReducers.js":"18","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Footer.js":"19","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/UserListScreen.js":"20","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductListScreen.js":"21","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductEditScreen.js":"22","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductCreateScreen.js":"23","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/SearchBox.js":"24","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Paginate.js":"25","/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Meta.js":"26","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/UserUpdateScreen.js":"27","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/AboutUsScreen.js":"28","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/NotFoundScreen.js":"29","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/EmailVerificationScreen.js":"30"},{"size":287,"mtime":1606714185360,"results":"31","hashOfConfig":"32"},{"size":4542,"mtime":1607766534540,"results":"33","hashOfConfig":"32"},{"size":2678,"mtime":1607784776372,"results":"34","hashOfConfig":"32"},{"size":2604,"mtime":1606801731456,"results":"35","hashOfConfig":"36"},{"size":690,"mtime":1607580208912,"results":"37","hashOfConfig":"32"},{"size":336,"mtime":1606799252034,"results":"38","hashOfConfig":"32"},{"size":5523,"mtime":1607329829632,"results":"39","hashOfConfig":"32"},{"size":1758,"mtime":1607759993887,"results":"40","hashOfConfig":"32"},{"size":1594,"mtime":1607760088931,"results":"41","hashOfConfig":"32"},{"size":7082,"mtime":1607766580208,"results":"42","hashOfConfig":"36"},{"size":2905,"mtime":1607763631372,"results":"43","hashOfConfig":"36"},{"size":2314,"mtime":1607361174620,"results":"44","hashOfConfig":"36"},{"size":5248,"mtime":1607784499568,"results":"45","hashOfConfig":"36"},{"size":13334,"mtime":1608479338048,"results":"46","hashOfConfig":"36"},{"size":1336,"mtime":1607359426616,"results":"47","hashOfConfig":"32"},{"size":515,"mtime":1606730125388,"results":"48","hashOfConfig":"36"},{"size":235,"mtime":1606963756643,"results":"49","hashOfConfig":"36"},{"size":3658,"mtime":1607312121388,"results":"50","hashOfConfig":"32"},{"size":345,"mtime":1607784712608,"results":"51","hashOfConfig":"32"},{"size":3031,"mtime":1607412017980,"results":"52","hashOfConfig":"32"},{"size":3213,"mtime":1607412108352,"results":"53","hashOfConfig":"36"},{"size":7547,"mtime":1607749238834,"results":"54","hashOfConfig":"32"},{"size":6600,"mtime":1607749238834,"results":"55","hashOfConfig":"32"},{"size":750,"mtime":1607328282468,"results":"56","hashOfConfig":"32"},{"size":771,"mtime":1607314815940,"results":"57","hashOfConfig":"36"},{"size":542,"mtime":1607361230792,"results":"58","hashOfConfig":"36"},{"size":8745,"mtime":1607691196460,"results":"59","hashOfConfig":"32"},{"size":1994,"mtime":1607401621832,"results":"60","hashOfConfig":"36"},{"size":648,"mtime":1607409693968,"results":"61","hashOfConfig":"32"},{"size":1109,"mtime":1607782381908,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"14678mp",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6q2ma4",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"109"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},"/home/upendra/Desktop/Second_hand_sell/frontend/src/index.js",[],["133","134"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/reducers/userReducer.js",[],["135","136"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Header.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/LoginScreen.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Product.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/FormContainer.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/actions/productActions.js",[],["137","138"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/types/userConstants.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/store.js",[],["139","140"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/actions/userActions.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/App.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/Landing.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/RegisterScreen.js",["141"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductScreen.js",["142"],"import React, { useState, useEffect } from 'react'\nimport Meta from '../components/Meta'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Carousel from 'react-bootstrap/Carousel'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { sendEmail } from '../actions/userActions'\nimport { PRODUCT_REVIEW_RESET } from '../types/productConstants'\nconst ProductScreen = ({ match, history }) => {\n  const [text, setText] = useState('')\n  const [comment, setComment] = useState('')\n\n  const [sendMail, setSendMail] = useState(false)\n  const [emailSent, setEmailSent] = useState(false)\n\n  const dispatch = useDispatch()\n  const emailReducer = useSelector((state) => state.emailReducer)\n  const {\n    loading: loadingEmail,\n    error: errorEmail,\n    data: dataEmail,\n  } = emailReducer\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    loading: loadingReview,\n    error: errorReview,\n    success: successReview,\n  } = productReviewCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userData } = userLogin\n  useEffect(() => {\n    if (successReview) {\n      setComment('')\n      dispatch({\n        type: PRODUCT_REVIEW_RESET,\n      })\n    }\n    dispatch(listProductDetails(match.params.id))\n  }, [match.params.id, dispatch, successReview])\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createProductReview(match.params.id, comment))\n  }\n  const emailSubmit = (e) => {\n    e.preventDefault()\n    setEmailSent(true)\n\n    dispatch(\n      sendEmail(\n        product?.seller?.selleremail,\n        text,\n        userData?.name,\n        userData?.address,\n        product?.name,\n        userData?.email,\n        userData?.contact?.phone_no\n      )\n    )\n\n    setText('')\n\n    setSendMail(false)\n    setTimeout(() => {\n      setEmailSent(false)\n    }, 10000)\n  }\n  const sendEMAIL = () => {\n    setSendMail(true)\n  }\n  const cancelHandler = () => {\n    setSendMail(false)\n  }\n  return (\n    <>\n      <Link to='/' className='btn btn-success my-3'>\n        Go Back\n      </Link>\n      <br />\n      {userData && userData._id === product.user && (\n        <Link\n          to={`/admin/product/${match.params.id}/edit`}\n          className='btn btn-primary my-3'\n        >\n          Edit Product\n        </Link>\n      )}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row className='row mb-2'>\n            <Col md={6} className='image-area'>\n              <Carousel>\n                {product.images.map((image) => (\n                  <Carousel.Item key={image._id}>\n                    <Image\n                      className='d-block w-100'\n                      src={image?.image1}\n                      alt='First slide'\n                    />\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Col>\n\n            <Col className='borderaround setheight' md={6}>\n              <p className='details'>\n                <i className='fas fa-info'></i> General Details\n              </p>\n\n              <Row>\n                <Col className='product  ' md={4} sm={4} xs={4}>\n                  <ul>\n                    <li> Product Id:</li>\n\n                    <li> Posted On:</li>\n                    <li> Expires On:</li>\n                    <li> Product:</li>\n                  </ul>\n                </Col>\n                <Col md={8} sm={8} xs={8}>\n                  <ul>\n                    <li>{product._id}</li>\n\n                    <li>{product?.createdAt?.substring(0, 10)}</li>\n                    <li>{product?.expiresOn?.substring(0, 10)}</li>\n                    <li> {product.name}</li>\n                  </ul>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          {loadingEmail && <Loader />}\n          {errorEmail && <Message variant='danger'>{errorEmail}</Message>}\n          {/* {console.log(dataEmail?.response)} */}\n          {dataEmail && emailSent && (\n            <Message variant='success'>{dataEmail.response}</Message>\n          )}\n          {sendMail && userData && (\n            <Row id='email' className='mt-5'>\n              <Col md={10} sm={12} className='formAround'>\n                <Form onSubmit={emailSubmit}>\n                  <div className='text-area1'>\n                    <span className='text-area2'>Send Email</span>\n\n                    <p className='text-area3'>\n                      Get in touch with {product?.seller?.sellername}\n                    </p>\n                  </div>\n                  <Row>\n                    <Col md={4} sm={4} xs={4}>\n                      <ul className='marginshift'>\n                        <p>{''}</p>\n                        <br />\n                        <li className='mt-2'>Your Name:</li>\n                        <li>Your Email:</li>\n                        <li>Your Phone No:</li>\n                        <li>Your Message:</li>\n                      </ul>\n                    </Col>\n                    <Col md={8} sm={8} xs={8}>\n                      <p className='cross'>\n                        <button\n                          onClick={cancelHandler}\n                          className=' cancel m-auto '\n                        >\n                          {' '}\n                          <i className='far fa-window-close'></i>\n                        </button>\n                      </p>\n                      <li>{userData.name}</li>\n                      <li>{userData.email}</li>\n                      <li>{userData?.contact?.phone_no}</li>\n                      <li>\n                        <textarea\n                          style={{ maxWidth: '100%', borderRadius: '5px' }}\n                          id='w3review'\n                          name='text'\n                          value={text}\n                          onChange={(e) => setText(e.target.value)}\n                          rows='8'\n                          cols='55'\n                          required\n                        />\n                      </li>\n                    </Col>\n                    <button className='button ' type='submit'>\n                      Send Email\n                    </button>\n                  </Row>\n                </Form>\n              </Col>\n            </Row>\n          )}\n          <Row>\n            <Col className='borderaround mt-5' md={10}>\n              <p className='details'>\n                <i className='fas fa-info'></i> Seller Details\n              </p>\n\n              <Row className='mb-2'>\n                <Col className='product' md={4} sm={2} xs={2}>\n                  <ul>\n                    <li> Name:</li>\n\n                    <li> Email:</li>\n                    <li> Address:</li>\n                    <li>Phone:</li>\n                    <li></li>\n                  </ul>\n                </Col>\n                <Col md={8} sm={10} xs={10}>\n                  <ul>\n                    <li>{product?.seller?.sellername}</li>\n\n                    <li>\n                      {/* {product?.seller?.selleremail}{' '} */}\n                      <span>\n                        <button\n                          className='emailbutton btn-success'\n                          onClick={sendEMAIL}\n                        >\n                          Send Email\n                        </button>\n                      </span>\n                    </li>\n                    <li>{product?.seller?.selleraddress}</li>\n                    <li>\n                      {product?.seller?.phoneNo?.mobile}{' '}\n                      <span>\n                        {product?.seller?.phoneNo?.isVerified ? (\n                          <span>\n                            <i className='fas fa-mobile-alt'></i>\n                            <span className='underlined'>verified</span>\n                          </span>\n                        ) : (\n                          <span>\n                            <i className='fas fa-mobile-alt'></i>\n                            <span className='underlined'>unverified</span>\n                          </span>\n                        )}{' '}\n                      </span>\n                    </li>\n                    <li></li>\n                  </ul>\n                </Col>\n              </Row>\n              {sendMail && !userData && (\n                <Message variant='danger'>\n                  You need to be logged in to use this feature.{' '}\n                  <span>\n                    <Link to='/login'>Log In</Link> to Continue\n                  </span>\n                </Message>\n              )}\n            </Col>\n          </Row>\n          <Row className='mt-3'>\n            <Col className='borderaround mt-5 ' md={10}>\n              <p className='details'>\n                <i className='fas fa-info'></i> Pricing Details\n              </p>\n              <Row>\n                <Col className='product' md={6} sm={6} xs={4}>\n                  <ul>\n                    <li>Total Price:</li>\n                    {product?.Cost?.negotiable && <li>Negotiable:</li>}\n                  </ul>\n                </Col>\n                <Col md={6} sm={6} xs={8}>\n                  <ul>\n                    <li> Rs {product?.Cost?.price}</li>\n                    {product?.Cost?.negotiable && <li>Yes</li>}\n                  </ul>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col className='borderaround mt-5' md={10} sm={12} xs={12}>\n              <p className='details '>\n                <i className='fas fa-info'></i> Description\n              </p>\n              <p className='detailsdescription'>{product.description}</p>\n            </Col>\n          </Row>\n          <Row>\n            <Col className='borderaround mt-5' md={10}>\n              <p className='details'>\n                <i className='fas fa-info'></i> Delivery Information\n              </p>\n              <Row>\n                <Col className='product' md={6} sm={6} xs={5}>\n                  <ul>\n                    <li>Delivery Area:</li>\n                    <li>Delivery Charge:</li>\n                  </ul>\n                </Col>\n                <Col md={6} sm={6} xs={7}>\n                  <ul>\n                    <li>{product?.shippingAddress?.address} </li>\n                    <li>\n                      {' '}\n                      Rs {''}\n                      {product?.shippingAddress?.shippingCharge}\n                    </li>\n                  </ul>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row className='mt-3'>\n            <Col md={6}>\n              <h4>Buyer's Speak</h4>\n              {product.reviews.length === 0 && (\n                <Message variant='primary'>Be the First One to Review</Message>\n              )}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    {/* <strong>{review.name}</strong>\n                    <p>{review.createdAt.substring(0, 10)}</p> */}\n                    <p>\n                      Q.<span className='comment'> {review.comment} </span>\n                      <span className='review'>\n                        <span style={{ color: '#32a897', fontWeight: '800' }}>\n                          --Posted By <strong>{review.name}</strong> on{' '}\n                          <strong> {review.createdAt.substring(0, 10)} </strong>{' '}\n                        </span>\n                      </span>\n                    </p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item>\n                  <p>Post Your Speak</p>\n                  {errorReview && (\n                    <Message variant='danger'>{errorReview}</Message>\n                  )}\n\n                  {loadingReview && <Loader />}\n                  {userData ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='comment'>\n                        {/* <Form.Label>Comment</Form.Label> */}\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type='submit' variant='primary'>\n                        Post\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant='primary'>\n                      You must <Link to='/login'>Log In</Link> to post your\n                      speak{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/types/productConstants.js",[],["143","144"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Loader.js",["145"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Message.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/reducers/productReducers.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Footer.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/UserListScreen.js",[],["146","147"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductListScreen.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductEditScreen.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/ProductCreateScreen.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/SearchBox.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Paginate.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/components/Meta.js",[],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/UserUpdateScreen.js",["148"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProducts, deleteProduct } from '../actions/productActions'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { updateUser, getUserDetails } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nimport { USER_UPDATE_RESET, USER_DETAILS_RESET } from '../types/userConstants'\nconst UserUpdateScreen = ({ history, match }) => {\n  const userId = match.params.id\n  var i = 1\n  const [name, setName] = useState('')\n  const [address, setAddress] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const [phone_no, setPhone_no] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userData } = userLogin\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const { success, loading, error } = userUpdate\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { user, loading: loadingDetails } = userDetails\n  const productList = useSelector((state) => state.productList)\n  const { products, loading: loadinglist } = productList\n  const productDelete = useSelector((state) => state.productDelete)\n\n  const { success: successDelete } = productDelete\n  useEffect(() => {\n    dispatch(listProducts())\n    if (!userData || success) {\n      dispatch({ type: USER_UPDATE_RESET })\n      dispatch({ type: USER_DETAILS_RESET })\n\n      if (userData && userData.isAdmin) {\n        history.push('/admin/userlist')\n      } else {\n        history.push('/')\n      }\n    } else {\n      if (!user?.name) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setAddress(user.address)\n        setPhone_no(user?.contact?.phone_no)\n        setEmail(user.email)\n      }\n    }\n  }, [history, userData, user, success, dispatch, userId, successDelete])\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n    } else {\n      dispatch(\n        updateUser({\n          _id: userId,\n          name,\n          email,\n          password,\n          address,\n\n          phone_no,\n        })\n      )\n    }\n  }\n  return (\n    <>\n      <FormContainer>\n        <h1>Details</h1>\n\n        {loadingDetails && <Loader />}\n        <Form onSubmit={submitHandler} className='mt-5 mb-2'>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>\n              Email Address{' '}\n              <small className='slanted'>\n                {' '}\n                *Be sure to enter your valid email address\n              </small>\n            </Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter Email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='address'>\n            <Form.Label> Address</Form.Label>\n            <Form.Control\n              type='address'\n              placeholder='Enter Address'\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='contact No'>\n            <Form.Label>\n              Mobile No{' '}\n              <small className='slanted'>\n                * Be sure to enter a correct 10 digit number starting with 9\n              </small>\n            </Form.Label>\n            <Form.Control\n              type='contact'\n              placeholder='Enter Mobile No'\n              value={phone_no}\n              onChange={(e) => setPhone_no(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password </Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='confirmpassword'>\n            <Form.Label>Confirm Password </Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm Password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          {loading && <Loader />}\n\n          <Button type='submit' variant='primary'>\n            Update Profile\n          </Button>\n        </Form>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && (\n          <Message variant='success'>Profile updated successfully</Message>\n        )}\n      </FormContainer>\n      <Row>\n        <Col md={2}></Col>\n        <Col md={8}>\n          {loadinglist ? (\n            <Loader />\n          ) : (\n            <>\n              <h3>My Uploads</h3>\n              <Table\n                striped\n                bordered\n                hover\n                responsive\n                className='table-sm'\n                variant='danger'\n              >\n                <thead>\n                  <tr>\n                    <th>SN</th>\n                    <th>ID</th>\n                    <th>Product Name</th>\n                    <th>Category</th>\n                    <th>Price</th>\n                    <th>Negotiable</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* {console.log(products)}\n                  {console.log(products.length)} */}\n                  {userData &&\n                    products &&\n                    products.length !== 0 &&\n                    products.map(\n                      (product) =>\n                        product &&\n                        product.user == userData._id && (\n                          <tr key={product._id}>\n                            <td>{i++}</td>\n                            <td>{product._id}</td>\n                            <td>{product.name}</td>\n\n                            <td>{product.category}</td>\n                            <td>{product?.Cost.price}</td>\n                            <td>\n                              {product?.Cost.negotiable ? (\n                                <i\n                                  className='fas fa-check'\n                                  style={{ color: 'green' }}\n                                ></i>\n                              ) : (\n                                <i\n                                  className='fas fa-times'\n                                  style={{ color: 'red' }}\n                                ></i>\n                              )}\n                            </td>\n                            <td>\n                              <LinkContainer\n                                to={`/admin/product/${product._id}/edit`}\n                              >\n                                <Button variant='light' className='btn-sm'>\n                                  <i className='fas fa-edit'></i>\n                                </Button>\n                              </LinkContainer>\n                              <Button\n                                variant='danger'\n                                className='btn-sm'\n                                onClick={() => deleteHandler(product._id)}\n                              >\n                                <i className='fas fa-trash'></i>\n                              </Button>\n                            </td>\n                          </tr>\n                        )\n                    )}\n                </tbody>\n              </Table>\n            </>\n          )}\n        </Col>\n        <Col md={2}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default UserUpdateScreen\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/AboutUsScreen.js",["149","150","151"],"/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/NotFoundScreen.js",["152","153","154"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\n\nconst NotFoundScreen = () => {\n  return (\n    <>\n      <Row>\n        <img src='https://i.imgur.com/lKJiT77.png' />\n      </Row>\n      <Row>\n        <Col md={3}></Col>\n\n        <Col md={6}>\n          <h1 style={{ textAlign: 'Center' }}>\n           This Hungry Dog Ate This Page\n          </h1>\n        </Col>\n        <Col md={3}></Col>\n      </Row>\n      <Row className='docenter'>\n        <Link to='/' className='btn btn-success '>\n          GO BACK\n        </Link>\n      </Row>\n    </>\n  )\n}\n\nexport default NotFoundScreen\n","/home/upendra/Desktop/Second_hand_sell/frontend/src/screens/EmailVerificationScreen.js",["155","156","157","158"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { register } from '../actions/userActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nconst EmailVerificationScreen = ({ location, match, history }) => {\n  const token = match.params.token\n  const dispatch = useDispatch()\n  const userRegister = useSelector((state) => state.userRegister)\n  const { userData, loading, error } = userRegister\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userData) {\n      history.push(redirect)\n    }\n    dispatch(register(token))\n  }, [history, userData, redirect, token])\n\n  return (\n    <Row>\n      <Col md={2}></Col>\n      <Col md={6}>\n        <Message variant='primary'>Waiting for the confirmation....</Message>\n        {loading && <Loader />}\n        {error && <Message variant='danger'>{error}</Message>}\n      </Col>\n      <Col md={2}></Col>\n    </Row>\n  )\n}\n\nexport default EmailVerificationScreen\n",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"159","replacedBy":"165"},{"ruleId":"161","replacedBy":"166"},{"ruleId":"159","replacedBy":"167"},{"ruleId":"161","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":149,"column":13,"nodeType":"171","messageId":"172","endLine":149,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":3,"column":38,"nodeType":"175","messageId":"176","endLine":3,"endColumn":42},{"ruleId":"159","replacedBy":"177"},{"ruleId":"161","replacedBy":"178"},{"ruleId":"169","severity":1,"message":"170","line":13,"column":9,"nodeType":"171","messageId":"172","endLine":13,"endColumn":15},{"ruleId":"159","replacedBy":"179"},{"ruleId":"161","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":206,"column":38,"nodeType":"183","messageId":"172","endLine":206,"endColumn":40},{"ruleId":"173","severity":1,"message":"184","line":2,"column":20,"nodeType":"175","messageId":"176","endLine":2,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":30,"column":53,"nodeType":"187","endLine":30,"endColumn":68},{"ruleId":"185","severity":1,"message":"186","line":45,"column":14,"nodeType":"187","endLine":45,"endColumn":29},{"ruleId":"173","severity":1,"message":"184","line":3,"column":20,"nodeType":"175","messageId":"176","endLine":3,"endColumn":26},{"ruleId":"173","severity":1,"message":"188","line":3,"column":28,"nodeType":"175","messageId":"176","endLine":3,"endColumn":32},{"ruleId":"189","severity":1,"message":"190","line":9,"column":9,"nodeType":"191","endLine":9,"endColumn":54},{"ruleId":"173","severity":1,"message":"192","line":1,"column":28,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"184","line":3,"column":20,"nodeType":"175","messageId":"176","endLine":3,"endColumn":26},{"ruleId":"173","severity":1,"message":"188","line":3,"column":28,"nodeType":"175","messageId":"176","endLine":3,"endColumn":32},{"ruleId":"193","severity":1,"message":"194","line":19,"column":6,"nodeType":"195","endLine":19,"endColumn":42,"suggestions":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],["197"],["198"],["197"],["198"],["197"],["198"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar",["197"],["198"],["197"],["198"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},"Update the dependencies array to be: [history, userData, redirect, token, dispatch]",{"range":"202","text":"203"},[737,773],"[history, userData, redirect, token, dispatch]"]